}
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 4/oaktree/terraform$ rm main.tf
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 4/oaktree/terraform$ nano main.tf
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 4/oaktree/terraform$ terraform apply -auto-approve
aws_ecs_cluster.oaktree_cluster: Refreshing state... [id=arn:aws:ecs:ap-southeast-1:321225686735:cluster/oak-cluster]
aws_iam_role.ecs_task_exec: Refreshing state... [id=ecsTaskExecutionRole]
aws_vpc.oaktree_vpc: Refreshing state... [id=vpc-0cedca1b00147c7ad]
aws_ecr_repository.oaktree_repo: Refreshing state... [id=oaktree-cloud-app]
aws_dynamodb_table.oaktree_users: Refreshing state... [id=oaktree-users]
aws_iam_role_policy_attachment.ecs_task_exec_attach: Refreshing state... [id=ecsTaskExecutionRole-20250413022829120700000001]
aws_ecs_task_definition.oaktree_task: Refreshing state... [id=oaktree-task]
aws_internet_gateway.oaktree_igw: Refreshing state... [id=igw-0dcca4f21bb805ec2]
aws_subnet.oaktree_public_a: Refreshing state... [id=subnet-0eaf556277affd820]
aws_subnet.oaktree_public_b: Refreshing state... [id=subnet-0d2f6a8eb94d69e7a]
aws_security_group.oaktree_sg: Refreshing state... [id=sg-08c6abbb67e4d35fe]
aws_subnet.oaktree_public_c: Refreshing state... [id=subnet-0517c01b0a4422200]
aws_lb_target_group.oaktree_tg: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-1:321225686735:targetgroup/oaktree-target-group/db80321ad6fd2ed4]
aws_route_table.oaktree_public_rt: Refreshing state... [id=rtb-0c87e38bcdf7d0d49]
aws_lb.oaktree_alb: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-1:321225686735:loadbalancer/app/oaktree-alb/8fa9ed43f5efac3f]
aws_route_table_association.oaktree_rta_a: Refreshing state... [id=rtbassoc-08b21395fcad0b9e4]
aws_route_table_association.oaktree_rta_b: Refreshing state... [id=rtbassoc-0c9f028d5245e6b33]
aws_route_table_association.oaktree_rta_c: Refreshing state... [id=rtbassoc-08407edd5c7eb975f]
aws_ecs_service.oaktree_service: Refreshing state... [id=arn:aws:ecs:ap-southeast-1:321225686735:service/oak-cluster/oaktree-service]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with
the following symbols:
  + create

Terraform will perform the following actions:

  # aws_lb_listener.oaktree_listener will be created
  + resource "aws_lb_listener" "oaktree_listener" {
      + arn                                                                   = (known after apply)
      + id                                                                    = (known after apply)
      + load_balancer_arn                                                     = "arn:aws:elasticloadbalancing:ap-southeast-1:321225686735:loadbalancer/app/oaktree-alb/8fa9ed43f5efac3f"
      + port                                                                  = 80
      + protocol                                                              = "HTTP"
      + routing_http_request_x_amzn_mtls_clientcert_header_name               = (known after apply)
      + routing_http_request_x_amzn_mtls_clientcert_issuer_header_name        = (known after apply)
      + routing_http_request_x_amzn_mtls_clientcert_leaf_header_name          = (known after apply)
      + routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name = (known after apply)
      + routing_http_request_x_amzn_mtls_clientcert_subject_header_name       = (known after apply)
      + routing_http_request_x_amzn_mtls_clientcert_validity_header_name      = (known after apply)
      + routing_http_request_x_amzn_tls_cipher_suite_header_name              = (known after apply)
      + routing_http_request_x_amzn_tls_version_header_name                   = (known after apply)
      + routing_http_response_access_control_allow_credentials_header_value   = (known after apply)
      + routing_http_response_access_control_allow_headers_header_value       = (known after apply)
      + routing_http_response_access_control_allow_methods_header_value       = (known after apply)
      + routing_http_response_access_control_allow_origin_header_value        = (known after apply)
      + routing_http_response_access_control_expose_headers_header_value      = (known after apply)
      + routing_http_response_access_control_max_age_header_value             = (known after apply)
      + routing_http_response_content_security_policy_header_value            = (known after apply)
      + routing_http_response_server_enabled                                  = (known after apply)
      + routing_http_response_strict_transport_security_header_value          = (known after apply)
      + routing_http_response_x_content_type_options_header_value             = (known after apply)
      + routing_http_response_x_frame_options_header_value                    = (known after apply)
      + ssl_policy                                                            = (known after apply)
      + tags_all                                                              = (known after apply)
      + tcp_idle_timeout_seconds                                              = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = "arn:aws:elasticloadbalancing:ap-southeast-1:321225686735:targetgroup/oaktree-target-group/db80321ad6fd2ed4"
          + type             = "forward"
        }

      + mutual_authentication (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
aws_lb_listener.oaktree_listener: Creating...
aws_lb_listener.oaktree_listener: Creation complete after 1s [id=arn:aws:elasticloadbalancing:ap-southeast-1:321225686735:listener/app/oaktree-alb/8fa9ed43f5efac3f/cc16ffb9c0ab653d]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

alb_dns_name = "oaktree-alb-194477616.ap-southeast-1.elb.amazonaws.com"
dynamodb_table_name = "oaktree-users"
ecr_repository_url = "321225686735.dkr.ecr.ap-southeast-1.amazonaws.com/oaktree-cloud-app"
ecs_cluster_name = "oak-cluster"
ecs_service_name = "oaktree-service"
internet_gateway_id = "igw-0dcca4f21bb805ec2"
subnet_ids = [
  "subnet-0eaf556277affd820",
  "subnet-0d2f6a8eb94d69e7a",
  "subnet-0517c01b0a4422200",
]
task_execution_role_arn = "arn:aws:iam::321225686735:role/ecsTaskExecutionRole"
vpc_id = "vpc-0cedca1b00147c7ad"
rae@Rae:/mnt/c/Users/KHARDZ/Desktop/Week 4/oaktree/terraform$